---

name: Свойства параметров
theory: |

  Заполнение свойств из параметров конструктора частая задача в работе с классами. Поэтому в TypeScript добавили специальный синтаксис, который позволяет делать это автоматически:

  ```typescript
  class SomeClass {
    constructor(public one: number, private two: string) {}

    get three(): string {
      return `${this.one} ${this.two}`;
    }
  }
  ```

  Этот код делает то же самое, что и этот:

  ```typescript
    class SomeClass {
      public one: number;

      private two: string;

      constructor(one: number, two: string) {
        this.one = one;
        this.two = two;
      }

      get three(): string {
          return `${this.one} ${this.two}`;
      }
    }
  ```
  
  <!-- TODO - автору: не хватает описания кода - на что обратить внимание, или что тут сделали -->
  
  Новый синтаксис позволяет не дублировать код заполнения свойств из параметров и делает его более лаконичным. Если в конструкторе есть какая-то логика, то свойства все равно нужно заполнять вручную.

instructions: |

  Реализуйте класс `CustomFile`, в конструктор которого передается имя файла и размер в байтах. Внутри класса определите метод `toString()`, который должен вернуть форматированную строку в формате `<file-name> (<size> bytes)`. Используйте свойства параметров для заполнения свойств класса.

  ```typescript
  const file = new CustomFile('open-world.jpeg', 1000);
  console.log(file); // open-world.jpeg (1000 bytes)
  ```


tips:
  - |
    [Перегрузка конструктора](https://www.typescriptlang.org/docs/handbook/2/classes.html#constructors)
  - |
    [Typescript Constructor Shorthand](https://dev.to/satansdeer/typescript-constructor-shorthand-3ibd)
